apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tx-dcm-backend.fullname" . }}
  labels:
    {{- include "tx-dcm-backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "tx-dcm-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "tx-dcm-backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DCM_DATASOURCE_HOST
              value: {{  include "dcm-backend.postgres.name" . }}
            - name: DCM_DATASOURCE_NAME
              value: {{ .Values.postgres.auth.database }}
            - name: DCM_DATASOURCE_USER
              value: {{ .Values.postgres.auth.username }}
            - name: DCM_DATASOURCE_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "dcm-backend.postgres.name" . }}
                  key: password
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: { { .Values.livenessProbe.path } }
              port: { { .Values.livenessProbe.port } }
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: { { .Values.readinessProbe.path } }
              port: { { .Values.readinessProbe.port } }
              scheme: HTTP

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
